#How many copies of the film Hunchback Impossible exist in the inventory system?
select count(film_id)from sakila.inventory
where film_id=(select film_id from sakila.film where title = 'hunchback impossible');

#List all films whose length is longer than the average of all the films.
select title,length from sakila.film
where length > (select avg(length)
from sakila.film)
order by title asc;

#Use subqueries to display all actors who appear in the film Alone Trip.
select f.film_id,concat(first_name, ' ' ,last_name) as actor from sakila.film_actor f
join sakila.actor a
on f.actor_id=a.actor_id
where film_id=(select film_id from sakila.film f where title = 'Alone Trip');

#Sales have been lagging among young families, and you wish to target all family movies for a promotion. Identify all movies categorized as family films.
select film_id, title from sakila.film where 
film_id in (select film_id from sakila.film_category
where category_id = (select category_id from sakila.category where name='family'));

#Get name and email from customers from Canada using subqueries.
select concat(first_name, ' ',last_name) as customer, email  from sakila.customer
where address_id in (select address_id from sakila.address 
where city_id in (select city_id from sakila.city 
where country_id in (select country_id from sakila.country 
where country ='canada')));

#Which are films starred by the most prolific actor? Most prolific actor is defined as the actor that has acted in the most number of films. First you will have to find the most prolific actor and then use that actor_id to find the different films that he/she starred.

select concat(first_name, ' ', last_name) as actor_name, film.title, film.release_year
from sakila.actor 
join sakila.film_actor using (actor_id) 
join sakila.film using (film_id)
where actor_id = (select actor_id from sakila.actor
join sakila.film_actor using (actor_id)
join sakila.film using (film_id)
group by actor_id
order by count(film_id) desc
limit 1);

#Films rented by most profitable customer. You can use the customer table and payment table to find the most profitable customer
select film_id, title, rental_date, sum(amount) from sakila.film
join sakila.inventory i using (film_id)
join sakila.rental r using (inventory_id) 
join sakila.payment p using (rental_id)
where r.customer_id = (select customer_id from sakila.customer
join sakila.payment using (customer_id)
group by customer_id
order by sum(amount) desc
limit 1) order by rental_date desc;

#Customers who spent more than the average payments.
select customer_id, sum(amount) as payment from sakila.customer
join sakila.payment using (customer_id)
group by customer_id
having sum(amount) > (select avg(total_payment)
from (select customer_id, sum(amount) as total_payment from sakila.payment
group by customer_id) t )
order by payment desc;

